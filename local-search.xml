<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>张啸廷是大傻逼</title>
    <link href="/2023/03/27/zxt/"/>
    <url>/2023/03/27/zxt/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>傻逼王斐燕叫我发的</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JaveWeb</title>
    <link href="/2023/03/27/JaveWeb/"/>
    <url>/2023/03/27/JaveWeb/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>制作中小型网站&amp;企业管理系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java SE基础</title>
    <link href="/2023/03/27/Java/"/>
    <url>/2023/03/27/Java/</url>
    
    <content type="html"><![CDATA[<p>1、JDK：Java开发工具包，包括JVM虚拟机，核心类库，开发工具。JRE：Java运行环境。JDK包含了JRE，JRE包含了JVM。</p></br><p>2、class：创建&#x2F;定义一个类，类是Java最基本的组成单元。</p></br><p>3、计算机三原色：红、绿、蓝&#x3D;》rbg。</p></br><p>4、数据类型：</p><p>​整型：byte、short、int（默认）、long。定义long类型的变量，在数值后面需要加一个L作为后缀，可以大写也可以小写。</p><p>​浮点数：float、double（默认），float后缀同理要加一个F</p><p>​字符：char　　　　　　　布尔：Boolean</p></br><p>5、Java键盘录入的类：Scanner。</p></br><p>6、byte、short、char三种类型数据在运算时，会先提升为int，在进行运算</p></br><p>7、数组初始化：</p><p>​静态初始化：int[] arr&#x3D;{1,2,3,4,5}</p><p>​动态初始化：int[] arr&#x3D;new int[5]  -&gt;代表五个</p></br><p>8、方法重载：方法名相同，参数类型或个数不同。Java虚拟机会通过参数不同来区分同名的方法。</p></br><p>9、类名首字母建议大写。</p></br><p>10、封装：对象代表什么，就得封装对应的数据，并提供数据对应的行为。例子：人画圆，画圆事件封装在圆对象上。</p></br><p>11、private关键词：是一个权限修饰符，可以修饰成员（成员变量和方法），被private修饰的成员只能在本类中才能访问。对象内部通过get和set进行变量操作。</p></br><p>12、构造方法推荐使用方式：无论是否使用，都手动书写无参构造方法和带全部参数的构造方法。（IDEA快捷创建：alt+insert指令。）</p></br><p>13、比较字符串对象中的内容是否相等：equals(完全一样)，equalsIgnoreCase(忽略大小写)</p></br><p>14、统计一个字符串中有多少大写字符、小写字符、数字字符。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> bigCount=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> smallCount=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> numberCount=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;str.length();i++)&#123;<br>    <span class="hljs-type">char</span> c=str.charAt(i);<br>    <span class="hljs-comment">//char类型的变量在参与计算的时候自动类型提升为int，查询ascii码表</span><br>    <span class="hljs-keyword">if</span>(c&gt;=<span class="hljs-string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="hljs-string">&#x27;z&#x27;</span>)&#123;<br>        smallCount++;<br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(c&gt;=<span class="hljs-string">&#x27;A&#x27;</span>&amp;&amp;c&lt;=<span class="hljs-string">&#x27;Z&#x27;</span>)&#123;<br>        bigCount++;<br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(c&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)&#123;<br>        numberCount++;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>15、StringBuilder：可以看成是一个容器，创建之后里面的内容是可变的（String定义后的字符串不可变）</p><p>​作用：提高字符串的操作效率。</p><p>StringBuilder是Java已经写好的类，打印对象不是地址值而是属性值。</p><p>最后要用toString()方法把StringBuilder变回字符串。</p><p>使用场景：字符串的拼接、字符串的反转。</p></br><p>​<strong>String对象的改变，实际上是通过内存地址的“断开-连接”变化来完成的。在这个过程中，原字符串中的内容并没有发生任何的改变。String s &#x3D; “yiyige” 和 s &#x3D; “yyg”这两行代码，实质上是开辟了2个内存空间，s只是由原来指向 “yiyige” 变为指向 “yyg” 而已，而其原来的字符串内容，是没有发生改变的。</strong></p><p>​<strong>所以String的不可变，其实是指value在栈中的引用地址不可变，而不是说常量池中value字符数组里的数据元素不可变。也就是说，value所引用的数组对象里的内容，其实是可以发生改变的。</strong></p><p>​<strong>String字符串的内容其实是可变的，不可改变的只是String字符串的对象地址。</strong></p><p>​<strong>因此，我们在以后的开发中，如果要经常修改字符串的内容，请尽量少用String！因为如果字符串的指向经常的“断开-连接”，就会大大降低性能，我建议大家使用StringBuilder 或 StringBuffer 进行替换。</strong></p></br><p>16、集合和数组的区别：</p><p>​1、数组长度固定，集合长度可变。</p><p>​2、数组可以存储引用数据类型和基本数据类型，集合只能存储引用数据类型，要想存储基本数据类型，需要将基本数据类型转化成对应的包装类。</p><p>​泛型：限定集合中存储数据的类型。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java">ArrayList&lt;String&gt; list=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;String&gt;(); <span class="hljs-comment">//JDK7以前的写法</span><br><br>ArrayList&lt;String&gt; list=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;(); <span class="hljs-comment">//JDK7以后的写法，可以省略后面的类型，&lt;&gt;要写</span><br><br><span class="hljs-comment">//添加元素，返回一个Boolean，永远为true</span><br>list.add(<span class="hljs-string">&quot;aaa&quot;</span>);<br>list.add(<span class="hljs-string">&quot;bbb&quot;</span>);<br>list.add(<span class="hljs-string">&quot;ccc&quot;</span>);<br><span class="hljs-comment">//删除元素</span><br>list.remove(<span class="hljs-string">&quot;aaa&quot;</span>);  <span class="hljs-comment">//删除成功返回true，失败返回false</span><br>list.remove(<span class="hljs-number">1</span>); <span class="hljs-comment">//根据索引删除元素，返回被删除的元素</span><br><span class="hljs-comment">//修改元素</span><br>list.set(<span class="hljs-number">1</span>,<span class="hljs-string">&quot;ddd&quot;</span>);  <span class="hljs-comment">//返回被修改的元素</span><br><span class="hljs-comment">//查询元素</span><br>list.get(<span class="hljs-number">0</span>); <span class="hljs-comment">//返回被查询的元素</span><br><span class="hljs-comment">//获取长度</span><br>list.size();<br><br></code></pre></td></tr></table></figure></br><p>17、基本数据类型对应的包装类</p><p>​byte-&gt;Byte　　 　short-&gt;Short 　　　<strong>char-&gt;Character　　　 int-&gt;Integer</strong> 　　　long-&gt;Long 　　　float-&gt;Float 　double-&gt;Double 　　boolean-&gt;Boolean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">ArrayList&lt;Integer&gt; list=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br><br>ArrayList&lt;Character&gt; list=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
